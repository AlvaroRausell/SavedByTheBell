#BlueJ class context
comment0.target=MainCharacter
comment0.text=\r\n\ Main\ Character\ class\ for\ "Saved\ by\ the\ bell"\ game.\r\n\r\n\ This\ is\ a\ child\ of\ the\ Character\ class,\ which\ stores\ all\ the\ information\r\n\ and\ actions\ that\ the\ player\ can\ take\ throughout\ the\ course\ of\ the\ game.\r\n\r\n\ This\ class\ differs\ from\ its\ parent\ class\ in\ the\ fact\ that\ it\ includes\r\n\ more\ fields\ that\ are\ important\ to\ progress\ throughout\ the\ game.\ This\ includes\r\n\ clothesOn,\ which\ is\ initialised\ as\ false\ (thus\ not\ letting\ the\ player\ move\ to\ other\ places\r\n\ apart\ from\ the\ bed,\ room\ and\ bathroom)\ or\ hasOyster\ (necessary\ to\ use\ the\ transport\ services).\r\n\ Additionally,\ it\ also\ stores\ an\ instance\ of\ the\ game's\ Room\ Manager,\ in\ order\ to\ navigate\ across\ the\ map.\r\n\r\n\ Lastly,\ if\ has\ variables\ such\ as\ stress\ and\ comfort\ that\ will\ affect\ the\ outcome\ of\ the\ game\ and\ vary\r\n\ depending\ on\ the\ choices\ the\ player\ makes.\r\n\r\n\ It\ also\ includes\ methods\ to\ interact\ with\ objects\ and\ people,\ as\ well\ as\ buying\ items.\r\n\r\n\ @author\ \u00C1lvaro\ Rausell\r\n\ @version\ 08.12.2017\r\n
comment1.params=name\ room\ roomManager\ time
comment1.target=MainCharacter(java.lang.String,\ Room,\ RoomManager,\ int)
comment1.text=\r\n\ Initialises\ the\ main\ character.\r\n\ @param\ name\ Name\ of\ the\ player\r\n\ @param\ room\ Initial\ room\r\n\ @param\ roomManager\ Room\ manager\r\n\ @param\ time\ Time\ to\ count\ down\ from\r\n
comment10.params=
comment10.target=void\ showStats()
comment10.text=\r\n\ Prints\ the\ stats\ of\ the\ player\r\n
comment11.params=change
comment11.target=void\ changeStress(int)
comment11.text=\r\n\ Changes\ the\ stress\ levels\ by\ a\ certain\ amount\r\n\ @param\ change\ amount\ by\ which\ to\ change\ the\ stress\ level\r\n
comment12.params=
comment12.target=int\ getMoney()
comment12.text=\r\n\ @return\ the\ money\ the\ player\ has\r\n
comment13.params=change
comment13.target=void\ changeMoney(int)
comment13.text=\r\n\ Changes\ the\ amount\ of\ money\ the\ player\ has\r\n\ @param\ change\ Amount\ by\ which\ to\ change\ the\ quantity\ of\ money\r\n
comment14.params=
comment14.target=void\ withdrawMoney()
comment14.text=\r\n\ Withdraws\ money\ from\ the\ ATM\ machine\r\n
comment15.params=change
comment15.target=void\ changeComfort(int)
comment15.text=\r\n\ Changes\ the\ comfort\ levels\ by\ a\ certain\ amount\r\n\ @param\ change\ amount\ by\ which\ to\ change\ the\ comfort\ level\r\n
comment16.params=
comment16.target=void\ takeTest()
comment16.text=\r\n\ Takes\ the\ test\ when\ the\ player\ is\ at\ the\ exam\ hall.\r\n\ It\ takes\ into\ account\ the\ stress\ and\ comfort\ levels\ to\ set\ the\ grade\ of\ the\ test.\r\nIn\ the\ end\ it\ displays\ a\ goodbye\ message\ and\ exits\ the\ program.
comment17.params=command
comment17.target=void\ goRoom(Command)
comment17.text=\r\n\ Try\ to\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n
comment18.params=sub
comment18.target=void\ subtractTime(int)
comment18.text=\r\n\ Subtracts\ the\ time\ available\ by\ the\ value\ set\ in\ the\ parameter\ and\ increase\ the\ stress\ by\ the\ half\r\n\ of\ the\ parameter\r\n\ @param\ sub\ Value\ to\ subtract\ from\ the\ time\ variable\r\n
comment19.params=item
comment19.target=void\ useItem(java.lang.String)
comment19.text=\r\n\ Checks\ if\ the\ user\ has\ the\ item.\ If\ so,\ it\ calls\ its\ interact\ method.\r\n\ Else,\ it\ displays\ a\ message\ according\ to\ whether\ there\ is\ no\ parameter\r\n\ or\ if\ teh\ user\ doesn't\ have\ that\ item.\r\n\ @param\ item\ name\ of\ the\ item\ to\ use\r\n
comment2.params=
comment2.target=boolean\ hasBackpack()
comment2.text=\r\n\ @return\ true\ if\ the\ user\ has\ a\ backpack\r\n
comment20.params=
comment20.target=int\ getTime()
comment20.text=\r\n\ @return\ the\ amount\ of\ time\ remaining\r\n
comment21.params=
comment21.target=void\ lookAround()
comment21.text=\r\n\ Displays\ what\ the\ player\ sees\ in\ the\ current\ room\ (items\ and\ people)\r\n
comment22.params=
comment22.target=void\ sleep()
comment22.text=\r\n\ Sleeps\ when\ the\ player\ is\ in\ the\ bed,\r\n\ which\ increases\ his\ comfort\ and\ decreases\ his\ stress\ levels,\r\n\ but\ subtracts\ time\r\n
comment23.params=
comment23.target=void\ takeAll()
comment23.text=\r\n\ Takes\ all\ the\ items\ in\ the\ room.\r\n\ If\ it\ exceeds\ the\ weight\ limit,\ it\ will\ display\ a\ message\r\n\ and\ will\ not\ take\ the\ remaining\ items.\r\n
comment24.params=item
comment24.target=void\ take(java.lang.String)
comment24.text=\r\n\ This\ method\ responds\ to\ the\ take\ command,\ thus\ having\ several\ possible\ tasks.\r\n\ If\ it\ is\ an\ item,\ the\ player\ will\ take\ it\ as\ far\ as\ it\ is\ in\ the\ room\ and\r\n\ it\ does\ not\ exceed\ the\ weight\ limit.\r\n\ If\ it\ is\ something\ else,\ such\ as\ shower,\ tube,\ or\ bus,\ the\ player\ will\ do\r\n\ an\ action\ as\ far\ as\ it\ is\ available\ in\ the\ current\ room.\r\n\ @param\ item\ "Item"\ to\ take\r\n
comment25.params=item
comment25.target=void\ dropItem(java.lang.String)
comment25.text=\r\n\ Drops\ an\ item\ by\ name\ if\ the\ player\ has\ it.\ Else,\ it\ will\ say\ that\ he\ does\ not\r\n\ have\ such\ item.\r\n\ If\ the\ item\ in\ question\ is\ the\ backpack,\ it\ will\ drop\ it\ iff\ the\ new\ weight\ limit\ is\ not\r\n\ exceeded\ by\ the\ weight\ of\ the\ items\ the\ \ player\ has.\ Otherwise,\ the\ system\ will\ ask\ the\ player\r\n\ to\ drop\ other\ items\ before.\r\n@param\ item\ Item\ to\ drop
comment3.params=character
comment3.target=void\ talkTo(java.lang.String)
comment3.text=\r\n\ Interacts\ with\ the\ character\ given\ as\ the\ parameter\r\n\ @param\ character\ Character\ to\ interact\ with\r\n
comment4.params=hasBackpack
comment4.target=void\ setHasBackpack(boolean)
comment4.text=\r\n\ Sets\ if\ the\ user\ has\ a\ backpack\r\n\ @param\ hasBackpack\ true\ if\ the\ object\ has\ a\ backpack\r\n
comment5.params=hasOyster
comment5.target=void\ setHasOyster(java.lang.Boolean)
comment5.text=\r\n\ Sets\ if\ the\ user\ has\ used\ the\ Oyster\ Card\r\n@param\ hasOyster\ true\ if\ the\ Oyster\ Card\ item\ has\ been\ used
comment6.params=
comment6.target=void\ getUp()
comment6.text=\r\nGets\ up\ from\ bed.\ If\ the\ player\ is\ already\ up,\ it\ will\ display\ a\ message\ saying\ so
comment7.params=
comment7.target=void\ changeClothes()
comment7.text=\r\n\ Changes\ the\ player's\ clothes\ in\ order\ to\ go\ out.\r\n\ If\ he\ has\ already\ changed\ them,\ it\ will\ display\ a\ message\ saying\ so.\r\n
comment8.params=product
comment8.target=void\ buy(java.lang.String)
comment8.text=\r\n\ Buys\ the\ product\ input\ by\ the\ user.\ If\ the\ name\ of\ the\ product\ coincides\r\n\ with\ the\ place\ it\ can\ be\ bought\ at,\ it\ adds\ the\ item\ to\ the\ inventory\r\n\ and\ deducts\ the\ price\ from\ the\ money\ the\ player\ has.\r\n\r\n\ In\ case\ he\ is\ not\ in\ the\ appropriate\ place,\ or\r\n\ if\ the\ user\ has\ no\ money,\ the\ system\ will\ display\ a\ message.\r\n\ @param\ product\ Name\ of\ the\ product\ to\ buy\r\n
comment9.params=change
comment9.target=void\ changeWeightLimit(int)
comment9.text=\r\n\ Changes\ the\ weight\ limit,\ which\ occurs\ when\ the\ backpack\ is\ taken/dropped\r\n\ @param\ change\ Amount\ by\ which\ the\ weight\ limit\ changes\r\n
numComments=26
